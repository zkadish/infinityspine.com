!function(Q){var F={};function B(U){if(F[U])return F[U].exports;var n=F[U]={i:U,l:!1,exports:{}};return Q[U].call(n.exports,n,n.exports,B),n.l=!0,n.exports}B.m=Q,B.c=F,B.d=function(Q,F,U){B.o(Q,F)||Object.defineProperty(Q,F,{enumerable:!0,get:U})},B.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},B.t=function(Q,F){if(1&F&&(Q=B(Q)),8&F)return Q;if(4&F&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var U=Object.create(null);if(B.r(U),Object.defineProperty(U,"default",{enumerable:!0,value:Q}),2&F&&"string"!=typeof Q)for(var n in Q)B.d(U,n,function(F){return Q[F]}.bind(null,n));return U},B.n=function(Q){var F=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return B.d(F,"a",F),F},B.o=function(Q,F){return Object.prototype.hasOwnProperty.call(Q,F)},B.p="",B(B.s=11)}({1:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('var handleErrors = function handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n\n  return response;\n};\n\n/* harmony default export */ __webpack_exports__["a"] = (handleErrors);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvdXRpbHMvZmV0Y2guanM/MzZjNCJdLCJuYW1lcyI6WyJoYW5kbGVFcnJvcnMiLCJyZXNwb25zZSIsIm9rIiwiRXJyb3IiLCJzdGF0dXNUZXh0Il0sIm1hcHBpbmdzIjoiQUFBQSxJQUFNQSxZQUFZLEdBQUcsU0FBZkEsWUFBZSxDQUFDQyxRQUFELEVBQWM7QUFDakMsTUFBSSxDQUFDQSxRQUFRLENBQUNDLEVBQWQsRUFBa0I7QUFDaEIsVUFBTUMsS0FBSyxDQUFDRixRQUFRLENBQUNHLFVBQVYsQ0FBWDtBQUNEOztBQUNELFNBQU9ILFFBQVA7QUFDRCxDQUxEOztBQU9lRCxxRUFBZiIsImZpbGUiOiIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgaGFuZGxlRXJyb3JzID0gKHJlc3BvbnNlKSA9PiB7XG4gIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICB0aHJvdyBFcnJvcihyZXNwb25zZS5zdGF0dXNUZXh0KTtcbiAgfVxuICByZXR1cm4gcmVzcG9uc2U7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBoYW5kbGVFcnJvcnM7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n')},11:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n // fixes issue with material textarea label getting cut off\n// by the inlined overflow value being applied by material-ui\n\nvar message = document.querySelector('#message-field');\n\nfunction onMousedownHandler() {\n  setTimeout(function () {\n    message.style = 'width: auto';\n  }, 0);\n}\n\nmessage.onmousedown = onMousedownHandler; // form submission and validation\n\nvar firstNameInput = document.querySelector('#name-first-input');\nvar lastNameInput = document.querySelector('#name-last-input');\nvar emailInput = document.querySelector('#email-input');\nvar checkbox = document.querySelector('#checkbox-1');\nvar textArea = document.querySelector('#textarea');\nvar submit = document.querySelector('.submit-btn');\nvar schedule = document.querySelector('.schedule');\nvar formData = {\n  'name-first-input': '',\n  'name-last-input': '',\n  'email-field': '',\n  checkbox: false,\n  message: ''\n};\nvar regx = {\n  name: /[a-zA-Z]/,\n  email: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,4})+$/\n};\n\nfunction regxTest(input, string) {\n  return regx[input].test(string);\n}\n\nfunction textFieldHandler(e) {\n  var input = e.target.id.split('-')[0];\n  var testInput = regxTest(input, e.key);\n  if (!testInput) e.preventDefault();\n}\n\nfunction invalidEmail(invalid) {\n  var borderElements = emailInput.parentElement.children[1].children;\n\n  if (invalid) {\n    emailInput.style.color = 'red';\n    borderElements[1].children[0].style.color = 'red';\n    borderElements[1].children[0].innerHTML = 'You must enter a valid email';\n\n    for (var i = 0; i < 3; i += 1) {\n      borderElements[i].style['border-color'] = 'red';\n    }\n\n    emailInput.focus();\n    return;\n  }\n\n  emailInput.style.color = null;\n  borderElements[1].children[0].style.color = null;\n  borderElements[1].children[0].innerHTML = 'Your Email';\n\n  for (var _i = 0; _i < 3; _i += 1) {\n    borderElements[_i].style['border-color'] = null;\n  }\n\n  emailInput.focus();\n  emailInput.blur();\n}\n\nfirstNameInput.onkeypress = textFieldHandler;\nlastNameInput.onkeypress = textFieldHandler; // emailInput.onkeypress = textFieldHandler;\n\nfunction sendEmail() {\n  console.log('sendEmail');\n  var origin = window.location.origin;\n  fetch(\"\".concat(origin, \"/infinity-spine/public/php/email.php?firstname=zach\")).then(function (response) {\n    var runPhp = document.querySelector('#run-php');\n    console.log('response', response);\n    runPhp.innerHTML = response.data;\n  });\n}\n\nsubmit.onclick = function () {\n  console.log('submit.onclick'); // debugger;\n\n  formData['name-first-input'] = firstNameInput.value;\n  formData['name-last-input'] = lastNameInput.value;\n  formData.checkbox = checkbox.value;\n  formData.message = textArea.value; // validate email\n\n  var validEmail = regxTest('email', emailInput.value);\n\n  if (validEmail) {\n    formData['email-field'] = emailInput.value;\n    invalidEmail(false);\n  } else {\n    console.log('not a valid email');\n    invalidEmail(true);\n    return;\n  }\n\n  submit.classList.add('submit-btn--disabled');\n  submit.setAttribute('disabled', '');\n  sendEmail();\n};\n\nfetch('http://wp.infinityspine.com/wp-json/wp/v2/pages/2522').then(_utils_fetch__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"]).then(function (response) {\n  return response.json();\n}).then(function (res) {\n  // console.log(res);\n  // debugger;\n  schedule.innerHTML = res.content.rendered;\n})[\"catch\"](function (err) {\n  console.error(err);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///11\n")}});